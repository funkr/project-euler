(ns project-euler.euler-002
  (:gen-class))

(def fib-seq-seq
  ((fn fib [a b]
     (lazy-seq (cons a (fib b (+ a b)))))
    0 1))

(defn euler-002
  "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
  the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed four million,
  find the sum of the even-valued terms."
  [upper-limit]
;  (apply + (filter even? (take-while (fn [x] (< x upper-limit)) fib-seq-seq))))
  (apply + (filter even? (take-while #(<= % upper-limit) fib-seq-seq))))

(defn fibionacci [x]
  (if (= x 0)
    0
    (recur (dec 1))))

(def next-fib
  (let [x (atom 0)
        y (atom 1)
        z (atom 0)]
    (fn []
      (reset! z (+ @x @y))
      (reset! x @y)
      (reset! y @z)
      (+ @z 0))))

